{
  "hash": "39d6501ecbecf37497548ff08107c413",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: 11 - Agregar columnas\noutput: html_document\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n\n# Introducción\n\nYa aprendimos a filtrar y ordenar datos, otra cosa útil que podemos hacer es crear nuevas columnas usando los valores de otras columnas. En este notebook revisamos cómo realizar este procedimiento.\n\n**Objetivos**\n\n-   Repasar el uso de las funciones `read_csv`, `filter` y `arrange`\n-   Utilizar funciones para crear nuevas columnas a partir de valores en otras columnas\n\n# Importar y preparar datos\n\nAntes que nada cargamos el paquete `tidyverse` que vamos a usar en este notebook.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.3.0\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.1.0     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n:::\n\n\n\n\nEn este notebook vamos a trabajar con datos del CONEVAL (Consejo Nacional de Evaluación de la Política de Desarrollo Social), la institución en México que estaba encargada de medir la pobreza. Los datos fueron descargados como un csv de la siguiente [base de datos](https://www.datos.gob.mx/dataset/pobreza_mexico/resource/6e409e3a-aa08-45f5-b84b-f5d8cc6fafa8).\n\nA continuación cargamos los datos. La base de datos incluye muchas columnas, para solo quedarnos con las que nos interesa podemos usar el argumento `col_select`, al cual le pasamos como un vector el nombre de las columnas con las que queremos quedarnos:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npobreza <- read_csv(\n  './data/pobreza_municipal.csv', \n  col_select = c(\n    'entidad_federativa', \n    'municipio', \n    'poblacion', \n    'pobreza_poblacion',\n    'pobreza_extrema_poblacion',\n    'periodo'\n    )\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 7382 Columns: 6\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): entidad_federativa, municipio\ndbl  (3): poblacion, pobreza_poblacion, pobreza_extrema_poblacion\ndate (1): periodo\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\n# Inspeccionar las columnas\nglimpse(pobreza)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 7,382\nColumns: 6\n$ entidad_federativa        <chr> \"Aguascalientes\", \"Aguascalientes\", \"Aguasca…\n$ municipio                 <chr> \"Aguascalientes\", \"Asientos\", \"Calvillo\", \"C…\n$ poblacion                 <dbl> 922268, 48635, 52377, 15942, 127962, 45100, …\n$ pobreza_poblacion         <dbl> 218414, 19518, 23966, 5905, 33708, 13042, 21…\n$ pobreza_extrema_poblacion <dbl> 18206, 2015, 2356, 538, 4204, 1297, 2995, 21…\n$ periodo                   <date> 2020-01-01, 2020-01-01, 2020-01-01, 2020-01…\n```\n\n\n:::\n:::\n\n\n\n\nLos nombres de las columnas tienen nombres que son fáciles de usar por lo que no es necesario cambiarlos.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnames(pobreza)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"entidad_federativa\"        \"municipio\"                \n[3] \"poblacion\"                 \"pobreza_poblacion\"        \n[5] \"pobreza_extrema_poblacion\" \"periodo\"                  \n```\n\n\n:::\n:::\n\n\n\n\nLos datos están desglosados a nivel de municipio e incluyen las siguientes columnas:\n\n-   `entidad_federativa`: el estado al cual pertenece el municipio\n-   `municipio`: el municipio\n-   `poblacion`: el número de habitantes que tiene el municipio\n-   `pobreza_poblacion`: el número de habitantes en alguna condición de pobreza en el municipio\n-   `pobreza_extrema_poblacion`: el número de habitantes en condición de pobreza extrema en el municipio\n-   `periodo`: la fecha a la cual corresponden los datos\n\n# Exploración inicial de los datos\n\nPodemos iniciar explorando los datos con las funciones que ya conocemos, por ejemplo, podemos quedarnos solo con los datos de 2020 usando la función `filter`:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npobreza_2020 <- filter(pobreza, periodo == '2020-01-01')\npobreza_2020\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2,469 × 6\n   entidad_federativa municipio           poblacion pobreza_poblacion\n   <chr>              <chr>                   <dbl>             <dbl>\n 1 Aguascalientes     Aguascalientes         922268            218414\n 2 Aguascalientes     Asientos                48635             19518\n 3 Aguascalientes     Calvillo                52377             23966\n 4 Aguascalientes     Cosío                   15942              5905\n 5 Aguascalientes     Jesús María            127962             33708\n 6 Aguascalientes     Pabellón de Arteaga     45100             13042\n 7 Aguascalientes     Rincón de Romos         53844             21813\n 8 Aguascalientes     San José de Gracia       9201              4211\n 9 Aguascalientes     Tepezalá                20898              7868\n10 Aguascalientes     El Llano                20182              8196\n# ℹ 2,459 more rows\n# ℹ 2 more variables: pobreza_extrema_poblacion <dbl>, periodo <date>\n```\n\n\n:::\n:::\n\n\n\n\nUna buena práctica para saber si estamos manejando bien nuestros datos es hacer algunas validaciones rápidas verificando que la información sea consistente con información que conocemos. Por ejemplo, podemos revisar cuanto suma la población de México y ver si corresponde aproximadamente a lo que sabemos (\\~128 millones).\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(pull(pobreza_2020, poblacion), na.rm = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 127409241\n```\n\n\n:::\n:::\n\n\n\n\nEsto nos arroja un valor aproximado de 127 millones que corresponde bien con lo que sabemos de la población de México. Esto es una señal de que estamos manejando e interpretando bien nuestros datos.\n\nAhora podemos ordenar los municipios de acuerdo a la cantidad de pobladores en condición de pobreza.\n\n**Pregunta** ¿Qué municipios crees que sean los que tienen más población en condición de pobreza?\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\narrange(pobreza_2020, desc(pobreza_poblacion))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2,469 × 6\n   entidad_federativa municipio           poblacion pobreza_poblacion\n   <chr>              <chr>                   <dbl>             <dbl>\n 1 Guanajuato         León                  1780345            816934\n 2 México             Ecatepec de Morelos   1808026            786391\n 3 Ciudad de México   Iztapalapa            1760382            772584\n 4 Puebla             Puebla                1643842            680945\n 5 México             Nezahualcóyotl        1126331            523289\n 6 México             Toluca                 986405            511347\n 7 México             Chimalhuacán           716859            493687\n 8 Baja California    Tijuana               1913345            453508\n 9 Guerrero           Acapulco de Juárez     757367            394861\n10 Jalisco            Zapopan               1458652            387944\n# ℹ 2,459 more rows\n# ℹ 2 more variables: pobreza_extrema_poblacion <dbl>, periodo <date>\n```\n\n\n:::\n:::\n\n\n\n\nAhora veamos cuales son los municipios con menor población en condición de pobreza:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\narrange(pobreza_2020, pobreza_poblacion)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2,469 × 6\n   entidad_federativa   municipio                poblacion pobreza_poblacion\n   <chr>                <chr>                        <dbl>             <dbl>\n 1 Oaxaca               Santa Magdalena Jicotlán        81                55\n 2 Nuevo León           Parás                          855                63\n 3 Sonora               San Felipe de Jesús            393                66\n 4 Oaxaca               Santo Domingo Tlatayápam       113                88\n 5 Sonora               Ónavas                         389                96\n 6 Sonora               Huépac                        1004                98\n 7 Oaxaca               Santiago Tepetlapa             130               101\n 8 Coahuila de Zaragoza Abasolo                       1019               112\n 9 Sonora               Oquitoa                        528               125\n10 Nuevo León           Higueras                      1308               131\n# ℹ 2,459 more rows\n# ℹ 2 more variables: pobreza_extrema_poblacion <dbl>, periodo <date>\n```\n\n\n:::\n:::\n\n\n\n\n**Pregunta** ¿Por qué crees que los datos muestran que la pobreza se concentra municipios del Estado de México y Ciudad de México?\n\nNota como ahorita el dato que estamos analizando es el **número total de habitantes en condición de pobreza**. La distribución de la población en México es sumamente heterogénea. Tenemos municipios con una gran cantidad de pobladores y otros con muy poca población. Eso significa que aunque un municipio sea muy pobre si este solo tiene 10 habitantes y todos viven en pobreza, aunque sea un municipio muy pobre, este quedará muy debajo en nuestra tabla de datos ordenados.\n\nSi ordenamos los municipios por población total podemos ver cómo varios de los municipios que figuraban entre los más pobres son también los que más habitantes tienen:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\narrange(pobreza_2020, desc(poblacion))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2,469 × 6\n   entidad_federativa municipio           poblacion pobreza_poblacion\n   <chr>              <chr>                   <dbl>             <dbl>\n 1 Baja California    Tijuana               1913345            453508\n 2 México             Ecatepec de Morelos   1808026            786391\n 3 Guanajuato         León                  1780345            816934\n 4 Ciudad de México   Iztapalapa            1760382            772584\n 5 Puebla             Puebla                1643842            680945\n 6 Chihuahua          Juárez                1600083            379290\n 7 Jalisco            Zapopan               1458652            387944\n 8 Jalisco            Guadalajara           1356167            336622\n 9 Ciudad de México   Gustavo A. Madero     1130265            381752\n10 México             Nezahualcóyotl        1126331            523289\n# ℹ 2,459 more rows\n# ℹ 2 more variables: pobreza_extrema_poblacion <dbl>, periodo <date>\n```\n\n\n:::\n:::\n\n\n\n\n**Pregunta** ¿Qué información nos serviría más para capturar la amplitud de la pobreza en un municipio?\n\nUn dato que reflejaría mejor la cantidad de la pobreza en una región sería el **porcentaje de población en pobreza**. Veamos algunas funciones que nos permitirán obtener nuevos valores a partir de las columnas existentes.\n\n# Función `mutate`\n\nLa función `mutate` nos permite agregar nuevas columnas a una tabla de datos, por ejemplo:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmutate(pobreza, titulo_columna = \"valor\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 7,382 × 7\n   entidad_federativa municipio           poblacion pobreza_poblacion\n   <chr>              <chr>                   <dbl>             <dbl>\n 1 Aguascalientes     Aguascalientes         922268            218414\n 2 Aguascalientes     Asientos                48635             19518\n 3 Aguascalientes     Calvillo                52377             23966\n 4 Aguascalientes     Cosío                   15942              5905\n 5 Aguascalientes     Jesús María            127962             33708\n 6 Aguascalientes     Pabellón de Arteaga     45100             13042\n 7 Aguascalientes     Rincón de Romos         53844             21813\n 8 Aguascalientes     San José de Gracia       9201              4211\n 9 Aguascalientes     Tepezalá                20898              7868\n10 Aguascalientes     El Llano                20182              8196\n# ℹ 7,372 more rows\n# ℹ 3 more variables: pobreza_extrema_poblacion <dbl>, periodo <date>,\n#   titulo_columna <chr>\n```\n\n\n:::\n:::\n\n\n\n\nPor la longitud de nuestra tabla de datos posiblemente no veamos en la consola la nueva columna, ya que esta agrega hasta el final de la tabla (puedes notar como hasta abajo de la consola te indica que falta imprimir algunas variables y ahí está el título de la columna que agregamos). Para verificar que nuestra función funciona poder ver todas las columnas usando las funciones `glimpse` o `View`:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nView(mutate(pobreza, titulo_columna = \"valor\"))\n\nglimpse(mutate(pobreza, titulo_columna = \"valor\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 7,382\nColumns: 7\n$ entidad_federativa        <chr> \"Aguascalientes\", \"Aguascalientes\", \"Aguasca…\n$ municipio                 <chr> \"Aguascalientes\", \"Asientos\", \"Calvillo\", \"C…\n$ poblacion                 <dbl> 922268, 48635, 52377, 15942, 127962, 45100, …\n$ pobreza_poblacion         <dbl> 218414, 19518, 23966, 5905, 33708, 13042, 21…\n$ pobreza_extrema_poblacion <dbl> 18206, 2015, 2356, 538, 4204, 1297, 2995, 21…\n$ periodo                   <date> 2020-01-01, 2020-01-01, 2020-01-01, 2020-01…\n$ titulo_columna            <chr> \"valor\", \"valor\", \"valor\", \"valor\", \"valor\",…\n```\n\n\n:::\n:::\n\n\n\n\nTambién podemos controlar la posición donde se crea nuestra nueva columna con el argumento `.after` o `.before`, al cual le pasamos el nombre de la columna después de la cual queremos agregar la columna:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmutate(pobreza, titulo_columna = \"valor\", .after = municipio)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 7,382 × 7\n   entidad_federativa municipio       titulo_columna poblacion pobreza_poblacion\n   <chr>              <chr>           <chr>              <dbl>             <dbl>\n 1 Aguascalientes     Aguascalientes  valor             922268            218414\n 2 Aguascalientes     Asientos        valor              48635             19518\n 3 Aguascalientes     Calvillo        valor              52377             23966\n 4 Aguascalientes     Cosío           valor              15942              5905\n 5 Aguascalientes     Jesús María     valor             127962             33708\n 6 Aguascalientes     Pabellón de Ar… valor              45100             13042\n 7 Aguascalientes     Rincón de Romos valor              53844             21813\n 8 Aguascalientes     San José de Gr… valor               9201              4211\n 9 Aguascalientes     Tepezalá        valor              20898              7868\n10 Aguascalientes     El Llano        valor              20182              8196\n# ℹ 7,372 more rows\n# ℹ 2 more variables: pobreza_extrema_poblacion <dbl>, periodo <date>\n```\n\n\n:::\n:::\n\n\n\n\nLa función `mutate` nos permite agregar columnas usando los valores de otras columnas, para hacer referencia a los valores de otras columnas simplemente usamos el nombre de la columna.\n\n**Pregunta** ¿Qué cálculos debemos hacer para calcular el *porcentaje de pobreza* en los municipios?\n\nLo que debemos hacer es dividir el número de habitantes en condición de pobreza entre el número total de habitantes y multiplicarlo por 100:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmutate(pobreza_2020, \n       pobreza_porcentaje = pobreza_poblacion / poblacion * 100, \n       .after = pobreza_poblacion)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2,469 × 7\n   entidad_federativa municipio   poblacion pobreza_poblacion pobreza_porcentaje\n   <chr>              <chr>           <dbl>             <dbl>              <dbl>\n 1 Aguascalientes     Aguascalie…    922268            218414               23.7\n 2 Aguascalientes     Asientos        48635             19518               40.1\n 3 Aguascalientes     Calvillo        52377             23966               45.8\n 4 Aguascalientes     Cosío           15942              5905               37.0\n 5 Aguascalientes     Jesús María    127962             33708               26.3\n 6 Aguascalientes     Pabellón d…     45100             13042               28.9\n 7 Aguascalientes     Rincón de …     53844             21813               40.5\n 8 Aguascalientes     San José d…      9201              4211               45.8\n 9 Aguascalientes     Tepezalá        20898              7868               37.6\n10 Aguascalientes     El Llano        20182              8196               40.6\n# ℹ 2,459 more rows\n# ℹ 2 more variables: pobreza_extrema_poblacion <dbl>, periodo <date>\n```\n\n\n:::\n:::\n\n\n\n\nPodemos agregar varias columnas a la vez. Por ejemplo, agregar una columna con el porcentaje de la población del municipio:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmutate(pobreza_2020, \n       pobreza_porcentaje = pobreza_poblacion / poblacion * 100,\n       poblacion_porcentaje = poblacion / sum(poblacion) * 100,\n       .after = pobreza_poblacion)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2,469 × 8\n   entidad_federativa municipio   poblacion pobreza_poblacion pobreza_porcentaje\n   <chr>              <chr>           <dbl>             <dbl>              <dbl>\n 1 Aguascalientes     Aguascalie…    922268            218414               23.7\n 2 Aguascalientes     Asientos        48635             19518               40.1\n 3 Aguascalientes     Calvillo        52377             23966               45.8\n 4 Aguascalientes     Cosío           15942              5905               37.0\n 5 Aguascalientes     Jesús María    127962             33708               26.3\n 6 Aguascalientes     Pabellón d…     45100             13042               28.9\n 7 Aguascalientes     Rincón de …     53844             21813               40.5\n 8 Aguascalientes     San José d…      9201              4211               45.8\n 9 Aguascalientes     Tepezalá        20898              7868               37.6\n10 Aguascalientes     El Llano        20182              8196               40.6\n# ℹ 2,459 more rows\n# ℹ 3 more variables: poblacion_porcentaje <dbl>,\n#   pobreza_extrema_poblacion <dbl>, periodo <date>\n```\n\n\n:::\n:::\n\n\n\n\nNota cómo en la columna `poblacion_porcentaje` obtenemos puros valores `NA`, esto es porque cuando usamos funciones como `sum` o `mean` y tenemos al menos un valor con `NA` este se \"expande\" y evita que hagamos operaciones. Para ignorar los valores `NA` debemos usar el argumento `na.rm = TRUE`:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmutate(pobreza_2020, \n       pobreza_porcentaje = pobreza_poblacion / poblacion * 100,\n       poblacion_porcentaje = poblacion / sum(poblacion, na.rm = TRUE) * 100,\n       .after = pobreza_poblacion)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2,469 × 8\n   entidad_federativa municipio   poblacion pobreza_poblacion pobreza_porcentaje\n   <chr>              <chr>           <dbl>             <dbl>              <dbl>\n 1 Aguascalientes     Aguascalie…    922268            218414               23.7\n 2 Aguascalientes     Asientos        48635             19518               40.1\n 3 Aguascalientes     Calvillo        52377             23966               45.8\n 4 Aguascalientes     Cosío           15942              5905               37.0\n 5 Aguascalientes     Jesús María    127962             33708               26.3\n 6 Aguascalientes     Pabellón d…     45100             13042               28.9\n 7 Aguascalientes     Rincón de …     53844             21813               40.5\n 8 Aguascalientes     San José d…      9201              4211               45.8\n 9 Aguascalientes     Tepezalá        20898              7868               37.6\n10 Aguascalientes     El Llano        20182              8196               40.6\n# ℹ 2,459 more rows\n# ℹ 3 more variables: poblacion_porcentaje <dbl>,\n#   pobreza_extrema_poblacion <dbl>, periodo <date>\n```\n\n\n:::\n:::\n\n\n\n\nRecordemos que si no guardamos nuestra tabla modificada en una variable (o si no sobrescribimos la variables), los resultados no se guardan:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npobreza_2020\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2,469 × 6\n   entidad_federativa municipio           poblacion pobreza_poblacion\n   <chr>              <chr>                   <dbl>             <dbl>\n 1 Aguascalientes     Aguascalientes         922268            218414\n 2 Aguascalientes     Asientos                48635             19518\n 3 Aguascalientes     Calvillo                52377             23966\n 4 Aguascalientes     Cosío                   15942              5905\n 5 Aguascalientes     Jesús María            127962             33708\n 6 Aguascalientes     Pabellón de Arteaga     45100             13042\n 7 Aguascalientes     Rincón de Romos         53844             21813\n 8 Aguascalientes     San José de Gracia       9201              4211\n 9 Aguascalientes     Tepezalá                20898              7868\n10 Aguascalientes     El Llano                20182              8196\n# ℹ 2,459 more rows\n# ℹ 2 more variables: pobreza_extrema_poblacion <dbl>, periodo <date>\n```\n\n\n:::\n:::\n\n\n\n\nAsí que debemos asignarlos a una variable explícitamente:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npobreza_2020 <- mutate(pobreza_2020, \n       pobreza_porcentaje = pobreza_poblacion / poblacion * 100,\n       poblacion_porcentaje = poblacion / sum(poblacion, na.rm = TRUE) * 100,\n       .after = pobreza_poblacion)\n```\n:::\n\n\n\n\n# Explorar de nuevo nuestros datos\n\nAhora podemos ordenar de nuevo nuestros datos de acuerdo al porcentaje en condición de pobreza:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\narrange(pobreza_2020, desc(pobreza_porcentaje))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2,469 × 8\n   entidad_federativa municipio   poblacion pobreza_poblacion pobreza_porcentaje\n   <chr>              <chr>           <dbl>             <dbl>              <dbl>\n 1 Oaxaca             San Simón …      4942              4925               99.7\n 2 Guerrero           Cochoapa e…     21967             21844               99.4\n 3 Oaxaca             San Franci…       312               310               99.4\n 4 Oaxaca             Coicoyán d…      9567              9500               99.3\n 5 Chiapas            San Juan C…     38321             38036               99.3\n 6 Chiapas            Chanal          13813             13690               99.1\n 7 Oaxaca             San Lucas …      3188              3156               99.0\n 8 Chiapas            Aldama           8563              8473               98.9\n 9 Chiapas            Chalchihui…     22131             21881               98.9\n10 Oaxaca             San Miguel…      3142              3104               98.8\n# ℹ 2,459 more rows\n# ℹ 3 more variables: poblacion_porcentaje <dbl>,\n#   pobreza_extrema_poblacion <dbl>, periodo <date>\n```\n\n\n:::\n:::\n\n\n\n\nY también podemos ver los municipios con menor porcentaje de población en pobreza:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\narrange(pobreza_2020, pobreza_porcentaje)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2,469 × 8\n   entidad_federativa municipio   poblacion pobreza_poblacion pobreza_porcentaje\n   <chr>              <chr>           <dbl>             <dbl>              <dbl>\n 1 Nuevo León         San Pedro …    118113              6438               5.45\n 2 Nuevo León         Parás             855                63               7.37\n 3 Ciudad de México   Benito Juá…    373752             29466               7.88\n 4 Nuevo León         Agualeguas       3193               278               8.71\n 5 Sonora             Huépac           1004                98               9.76\n 6 Nuevo León         Marín            4832               475               9.83\n 7 Chihuahua          Riva Palac…      8004               790               9.87\n 8 Nuevo León         Higueras         1308               131              10.0 \n 9 Nuevo León         Melchor Oc…      1400               141              10.1 \n10 Nuevo León         Abasolo          2807               291              10.4 \n# ℹ 2,459 more rows\n# ℹ 3 more variables: poblacion_porcentaje <dbl>,\n#   pobreza_extrema_poblacion <dbl>, periodo <date>\n```\n\n\n:::\n:::\n\n\n\n\n# Ejercicios\n\nEn estos ejercicios vas a explorar cuáles son los municipios con mayor porcentaje de población en condición de pobreza extrema para 2010.\n\n## Ejercicio 1\n\nCrea una variable que se llamen `pobreza_2010` donde filtres los valores de la tabla `pobreza` del periodo de 2010.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Escribe aquí tu respuesta\n```\n:::\n\n\n\n\n## Ejercicio 2\n\nCrea y guarda en tu variable `pobreza_2010` una nueva columna donde calcules el porcentaje de población en condiciones de pobreza extrema.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Escribe aquí tu respuesta\n```\n:::\n\n\n\n\n## Ejercicio 3\n\nOrdena tu tabla `porbreza_2010` de mayor a menor porcentaje de población en pobreza extrema para investigar cuáles fueron los municipio con mayor pobreza extrema en el país en ese años.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Escribe aquí tu respuesta\n```\n:::\n\n\n\n\n## Ejercicio 4\n\nRepite lo mismo que hiciste en los 3 ejercicios anteriores pero para los datos de 2015. ¿Cuál fue el municipio con mayor pobreza extrema en 2015?\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Escribe aquí tu respuesta\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}