{
  "hash": "67539128bf47769525e4fae7cd10ea0d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"04 - Variables\"\nformat: html\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n# Introducción\n\nHasta ahora lo que hemos hecho con R no son cosas muy útiles, sumar, restar o multiplicar lo podemos hacer con una calculadora, y escribir texto lo podemos hacer con cualquier editor de texto. Algo que hace muy útil a la programación son las **variables**. En este notebook exploramos qué son y como crear y usar variables en R.\n\n**Objetivos**\n\n-   Crear y usar variables de objetivos en R\n\n# Crear una variable\n\nCuando nosotros creamos un número o una cadena de texto al ejecutar el código R lo usa pero ya que ejecutó el código lo olvida. Para hacer que R no olvide los valores que le pasamos podemos usar variables.\n\nLas variables son como cajas a las que les podemos dar un **nombre** y en las cuales podemos guardar objetos como números o cadenas de texto.\n\nPara **asignar** un valor a una variable debemos poner:\n\n1.  el nombre de la variable a la izquierda,\n2.  el operador de asignación `<-` (un signo de menor qué `<` y un guión medio `-`; nota cómo se ve como una flecha apuntando a la izquierda; en RStudio puedes agregar los signos de manera rápida usando `Alt` + `-`)\n3.  un objeto a la derecha\n\n```         \nnombreVariabe <- objeto\n```\n\nPor ejemplo,\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmiEdad <- 20\n\nmiNombre <- \"Shrek\"\n\nmiApellido <- \"De Encantador\"\n\npi <- 3.141592\n\nradio <- 2\n```\n:::\n\n\n\nNota como después de ejecutar las celdas, en el panel de la derecha que se llama «Environment» te aparecen tus variables en una especie tabla. En la primera columna viene el nombre de la variable y en la segunda el valor del objeto que tiene guardada. Esto significa que R ya guardó en la memoria nuestras variables por lo que las podemos usar para hacer otras cosas.\n\nOtra forma como puedes ver las variables que has definido y que R reconoce es con el comando `ls()`. Intenta introducir `ls()` y luego dar Enter en la consola.\n\n# Usar una variable\n\nPara usar una variable podemos llamarla sólo usando su nombre\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npaste(\"Mi nombre es\", miNombre, \"y mi edad es\", miEdad, \"años.\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Mi nombre es Shrek y mi edad es 20 años.\"\n```\n\n\n:::\n:::\n\n\n\nAdemás podemos usar variables para asignarle a otras variables el resultado de una expresión:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\narea <- pi * radio ^ 2\n\nnombreCompleto <- paste(miNombre, miApellido)\n```\n:::\n\n\n\n# Reglas de cómo nombrar variables\n\nLos nombres de las variables pueden ser tan largos como queramos y **pueden incluir letras** (mayúsculas y minúsculas) **y números**, sin embargo, hay algunas reglas que hay que seguir:\n\n-   Los nombres de las variables no pueden empezar con números\n-   Los nombres de las variables no pueden incluir espacios ni caracteres especiales (`!`, `+`, `#`, `@`, etc.). Los únicos caracteres especiales que se pueden usar en los nombres son el guión bajo (`_`) y el punto (`.`).\n-   Los nombres de las variables no pueden ser *palabras clave* que R utiliza en su propio lenguaje. Algunas palabras reservadas son: `if`, `else`, `while`, `function`, `for`, `in`, `break`, `TRUE`, `FALSE`, entre otras.\n-   Aunque R algunas veces puede aceptar nombres de variables con acentos y la letra `ñ`, **no los utilices**. Esto se debe a que no todas las versiones y configuraciones de R los aceptan.\n\nLos siguientes son todos nombres válidos para funciones:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmiVariable <- 1\notra_variable <- 2\nvariable3 <- 3\nvariable.favorita <- 4\n```\n:::\n\n\n\nOtra cosa importante a notar es que los nombres son sensibles a las mayúsculas y minúsculas. Por ejemplo para R las siguientes son variables distintas:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nanimal <- \"sapo\"\nAnimal <- \"gato\"\n\npaste(\"El\", animal, \"se comió un\", Animal)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"El sapo se comió un gato\"\n```\n\n\n:::\n:::\n\n\n\n# Usar nombres descriptivos para las variables\n\nAlgo muy recomendable es que para nombrar variables usemos **nombres descriptivos**, es decir, que el nombre de la variable nos indique qué representa el objeto que contiene. Por ejemplo, si mi objeto representa el número de árboles que muestre en mi estudio, ¿cuál de los siguientes nombres es mejor?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn <- 47\n\nnumArboles <- 47\n```\n:::\n\n\n\nEl nombre de variable `n` es muy ambiguo y es difícil saber qué significa el objeto que tiene guardado. En cambio el nombre `numArboles` es un mucho mejor nombre de variable ya me indica rápidamente que representa el objeto.\n\n# Ejercicios\n\n## Ejercicio 1\n\nEn la siguiente celda:\n\n1.  Define una variable `genero` con el valor `\"Ambystoma\"`.\n2.  Define tres variables `especie1`, `especie2`, `especie3`, con los valores `\"mexicanum\"`, `\"jeffersonianum\"`, `\"andersoni\"`\n3.  Usa la función `paste()` para concatenar el nombre de las 3 especies: `Ambysoma mexicanum`, `Ambysoma jeffersonianum` y `Ambysoma andersoni`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Escribe aquí tu respuesta\n```\n:::\n\n\n\n## Ejercicio 2\n\nEn la siguiente celda tienes una serie de variables que guardan la temperatura media en la Ciudad de México en 7 meses distintos.\n\n1.  Calcula el promedio de las temperaturas y guárdalo en una variable que se llame `tempPromedio`\n2.  Imprime un mensaje en la consola con `paste()` que diga: `La temperatura promedio en la Ciudad de México es de <X> grados Celcius`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Temperatura media en 7 meses distintos en la CDMX\na <- 15.9\nb <- 17.5\nc <- 19.8\nd <- 20.2\ne <- 21.6\nf <- 19.2\ng <- 18.7\n\n# Escribe aquí tu respuesta\n```\n:::\n\n\n\n## Ejercicio 3\n\nDebes calcular la huella de carbono de una actividad que consume los siguientes recursos:\n\n-   10 kg de papel\n-   5 kg de azúcar\n-   5 kg de zanahorias\n-   5 kg de carne de pollo\n-   10 kg de gas licuado.\n\nLos factores de emisión de acuerdo a la IPCC de los recursos son los siguientes:\n\n-   papel: 0.8 kg CO2/kg\n-   azúcar: 0.6 kg CO2/kg\n-   zanahorias: 0.2 kg CO2/kg\n-   carne de pollo: 1.8 kg CO2/kg\n-   gas licuado: 1.7 kg CO2/kg\n\n1.  Crea variables donde guardes las emisiones de totales de cada recurso: `co2_papel`, `co2_azucar`, `co2_zanahorias`, `co2_pollo`, `co2_gas`\n2.  Crea una variable `co2_total` donde guardes las emisiones totales de CO2 de la actividad\n3.  Calcula el porcentaje del total que representa cada recurso y guarda los resultados en variables como: `porc_papel`, `porc_azucar`, `porc_zanahorias`, `porc_pollo`, `porc_gas`\n4.  Usa `paste()` para imprimir el siguiente texto: `\"La actividad emitió un total de <X> kilogramos de CO2\"`\n5.  Para cada actividad usa `paste()` para imprimir mensajes que digan: \"`Las emisiones del <RECURSO> representan el <X> % del total.`\"\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Escribe aquí tu respuesta\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}