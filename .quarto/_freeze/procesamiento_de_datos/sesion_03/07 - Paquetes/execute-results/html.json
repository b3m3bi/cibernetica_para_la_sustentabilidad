{
  "hash": "9d15039057efa03ec74dcf8fed276d16",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"07 - Paquetes\"\noutput: html_notebook\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n\n# Introducción\n\nLa instalación básica de R incluye muchas funciones muy útiles, sin embargo, también mucha gente ha escrito muchas más herramientas que extiendien la funcionalidad de R. Estas herramientas la gente las junta y crea **paquetes**. Estos paquetes están disponibles en distintos repositorios en la web para que cualquier usuario de R los pueda instalar y usar. En este notebook exploramos cómo usar paquetes en R.\n\n**Objetivos**\n- Instalar paquetes en R\n- Cargar y usar paquetes en R\n\n# Instalar paquetes\n\nAntes de poder usar un paquete debemos instalarlo para eso usamos la función `install.packages()`:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"cowsay\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nInstalling package into '/home/lggj/R/x86_64-pc-linux-gnu-library/4.5'\n(as 'lib' is unspecified)\n```\n\n\n:::\n:::\n\n\n\n\nMientras instalamos un paquete se muestran muchos mensajes en la consola, estos nos ayudan a saber cómo va la instalación y si hay algún error no ayudan a identificar dónde puede estar la falla. Cuando una instalación salió bien puedes ver casi al final un mensaje que dice `DONE (nombre_paquete)`.\n\nLa instalación de un paquete generalmente solo se tiene que hacer una sola vez. En Posit Cloud en cada proyecto nuevo que creamos debemos hacer la instalación de los paquetes que requerimos.\n\n# Usar funciones de un paquete \n\nPara usar las funciones de un paquete podemos poner el nombre del paquete seguido por dos dobles puntos y el nombre de la función que nos interesa usar:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncowsay::say(\"Muuuu... soy una vaca que habla\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n _________________________________ \n< Muuuu... soy una vaca que habla >\n --------------------------------- \n      \\\n       \\\n\n        ^__^ \n        (oo)\\ ________ \n        (__)\\         )\\ /\\ \n             ||------w|\n             ||      ||\n```\n\n\n:::\n\n```{.r .cell-code}\ncowsay::think(\"Muuuu... soy una vaca que piensa\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n __________________________________ \n( Muuuu... soy una vaca que piensa )\n ---------------------------------- \n      o\n       o\n\n        ^__^ \n        (oo)\\ ________ \n        (__)\\         )\\ /\\ \n             ||------w|\n             ||      ||\n```\n\n\n:::\n:::\n\n\n\n\n# Cargar un paquete\n\nPara no tener que escribir el nombre del paquete cada vez que queramos usar una función podemos cargar el paquete con la función `library()`:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(cowsay)\n```\n:::\n\n\n\n\nEsto hace que R reconozca las funciones de un paquete directamente haciendo más rápido su uso:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsay(\"Estoy aprendiendo R\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n _____________________ \n< Estoy aprendiendo R >\n --------------------- \n      \\\n       \\\n\n        ^__^ \n        (oo)\\ ________ \n        (__)\\         )\\ /\\ \n             ||------w|\n             ||      ||\n```\n\n\n:::\n\n```{.r .cell-code}\nthink(\"Ser o no ser...\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n _________________ \n( Ser o no ser... )\n ----------------- \n      o\n       o\n\n        ^__^ \n        (oo)\\ ________ \n        (__)\\         )\\ /\\ \n             ||------w|\n             ||      ||\n```\n\n\n:::\n:::\n\n\n\n\n# Ejercicio\n\nRevisa la documentación del paquete `cowsay` para hacer que en lugar de que salga una vaca salga otro animal.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Escribe aquí tu respuesta\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}