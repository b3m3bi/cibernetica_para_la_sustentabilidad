{"title":"12 - Resumir datos","markdown":{"yaml":{"title":"12 - Resumir datos","output":"html_document","editor_options":{"chunk_output_type":"console"}},"headingText":"Introducción","containsRefs":false,"markdown":"\n\n\nHasta ahora hemos usado funciones para filtrar, reordenar y agregar columnas a una tabla de datos. Otra cosa que es muy útil es crear nuestras propias tablas de datos para a partir los datos de otra tabla. En este notebook exploramos cómo crear tablas que resuman la información de otras tablas.\n\n**Objetivos**\n\n-   Usar la función `summarise` para crear tablas de resumen de datos\n-   Usar la función `group_by` para realizar operaciones con datos agrupados por campos\n\n# Importar y preparar los datos\n\nEn este notebook continuamos trabajando con los datos de pobreza de CONEVAL que usamos en el notebook anterior. Nos quedamos solo con los datos de 2020 y les agregamos la columna de porcentaje de pobreza:\n\n```{r}\n\nlibrary(tidyverse)\n\npobreza <- read_csv(\n  './data/pobreza_municipal.csv', \n  col_select = c(\n    'entidad_federativa', \n    'municipio', \n    'poblacion', \n    'pobreza_poblacion',\n    'pobreza_extrema_poblacion',\n    'periodo'\n    )\n)\n\npobreza_2020 <- filter(pobreza, periodo == '2020-01-01')\n\npobreza_2020 <- mutate(\n  pobreza_2020, \n  pobreza_porcentaje = pobreza_poblacion / poblacion * 100, \n  .after = pobreza_poblacion\n  )\n\npobreza_2020\n\n```\n\n# Resumir datos individualmente\n\nUsando las funciones `sum`, `mean`, `min` y `max` y la función `pull` o `select` podemos resumir los valores columas que queramos. Por ejemplo, para conocer la población total en México podemos sumar la columna `poblacion`:\n\n```{r}\n\nsum(pull(pobreza_2020, poblacion), na.rm = TRUE)\n\n```\n\nTambién podríamos calcular la población total en condición de pobreza en México sumando la columna `pobreza_poblacion`:\n\n```{r}\n\nsum(pull(pobreza_2020, pobreza_poblacion), na.rm = TRUE)\n\n```\n\nTambién nos podrían interesar la media, el máximo y mínimo de la columna `pobreza_porcentaje`:\n\n```{r}\n\nmean(pull(pobreza_2020, pobreza_porcentaje), na.rm = TRUE)\nmax(pull(pobreza_2020, pobreza_porcentaje), na.rm = TRUE)\nmin(pull(pobreza_2020, pobreza_porcentaje), na.rm = TRUE)\n\n```\n\nSin embargo, algo que sería más cómodo es tener una única tabla con todos estos valores de resumen. Para eso existe la función `summarise`.\n\n# Función `summarise`\n\nLa función `summarise` nos permite crear una sola tabla en la que pongamos los valores de resumen que nos interesan. Por ejemplo, podemos agregar columnas para todos los valores que obtuvimos en la sección anterior. Nota como aquí ya no necesitamos la función `pull`.\n\n```{r}\n\nsummarise(\n  pobreza_2020,\n  pob_total = sum(poblacion, na.rm = TRUE),\n  pob_pobreza_total = sum(pobreza_poblacion, na.rm = TRUE),\n  media_porcentaje_pobreza = mean(pobreza_porcentaje, na.rm = TRUE),\n  max_porcentaje_pobreza = max(pobreza_porcentaje, na.rm = TRUE),\n  min_porcentaje_pobreza = min(pobreza_porcentaje, na.rm = TRUE)\n)\n\n```\n\n# Resúmenes con datos agrupados\n\n`summarise` nos puede dar resúmenes muy útiles, sin embargo, algo más útil sería obtener resúmenes agrupando los datos. Por ejemplo, si quisiéramos saber cuál es el porcentaje de población en condición de pobreza en cada estado necesitamos la información de la población en pobreza total de un estado, y la población total del estado. Para sumar sólo la información de un estado podríamos usar la función `filter`, sin embargo como tenemos 32 estados tendríamos que aplicarla 32 veces... que flojera. Para eso es que tenemos la función `group_by`\n\nLa función `group_by` nos permite hacer operaciones agrupando los datos por un criterio. Por ejemplo, si queremos agrupar los datos por estado podemos hacer lo siguiente:\n\n```{r}\n\npobreza_2020_agrupado_por_entidad <- group_by(pobreza_2020, entidad_federativa)\npobreza_2020_agrupado_por_entidad\n\n```\n\nNota como parece que no les pasó nada a los datos. La función `group_by` por si sola no afecta en nada a los datos, solamente le indica a las funciones que usemos posteriormente que deben realizar las operaciones agrupando a los datos por un criterio. Nota como hasta arriba de donde se imprime la tabla hay una leyenda que dice `Groups: entidad_federativa`.\n\nVeamos que pasa si ahora repetimos el mismo resumen de arriba pero con los datos agrupados:\n\n```{r}\n\nsummarise(\n  pobreza_2020_agrupado_por_entidad,\n  pob_total = sum(poblacion, na.rm = TRUE),\n  pob_pobreza_total = sum(pobreza_poblacion, na.rm = TRUE),\n  media_porcentaje_pobreza = mean(pobreza_porcentaje, na.rm = TRUE),\n  max_porcentaje_pobreza = max(pobreza_porcentaje, na.rm = TRUE),\n  min_porcentaje_pobreza = min(pobreza_porcentaje, na.rm = TRUE)\n)\n\n```\n\nNota cómo ahora en lugar de arrojarnos un solo valor que resume todos los datos de la columna nos arroja una tabla con 32 filas que corresponden a cada estado cada uno con sus propios valores.\n\nLos resultados que arroja la función `summarise` son una nueva tabla que podemos guardar en una variable:\n\n```{r}\n\npobreza_2020_entidades <- summarise(\n  pobreza_2020_agrupado_por_entidad,\n  pob_total = sum(poblacion, na.rm = TRUE),\n  pob_pobreza_total = sum(pobreza_poblacion, na.rm = TRUE),\n  media_porcentaje_pobreza = mean(pobreza_porcentaje, na.rm = TRUE),\n  max_porcentaje_pobreza = max(pobreza_porcentaje, na.rm = TRUE),\n  min_porcentaje_pobreza = min(pobreza_porcentaje, na.rm = TRUE)\n)\n\npobreza_2020_entidades\n\n```\n\nY esta tabla la podemos manipular como a cualquier tabla. Por ejemplo, podemos agregarle una columna con el porcentaje de población en pobreza en el estado:\n\n```{r}\n\npobreza_2020_entidades <- mutate(\n  pobreza_2020_entidades,\n  pob_pobreza_porcentaje = pob_pobreza_total / pob_total * 100,\n  .after = pob_pobreza_total\n)\n\npobreza_2020_entidades\n\n```\n\nY podemos ordenarla de menor a mayor porcentaje de pobreza y usar `print` para ver la tabla completa:\n\n```{r}\n\nprint(arrange(pobreza_2020_entidades, pob_pobreza_porcentaje), n = 32)\n\n```\n\nUna función muy útil para usar con datos agrupados es la función `n()`. Esta lo único que hace es contar el número de elementos de cada grupo. Por ejemplo para saber cuántos municipios hay en cada entidad podemos hacer lo siguiente:\n\n```{r}\npobreza_2020_agrupado_por_entidad <- group_by(pobreza_2020, entidad_federativa)\nsummarise(\n    pobreza_2020_agrupado_por_entidad, \n    num_municipios = n()\n)\n```\n\n\n# Agrupar por varios valores\n\nLa función `group_by` nos permite agrupar por más de un solo valor. Por ejemplo, podemos hacer los mismos cálculos pero agrupando los valores de la tabla `pobreza` por entidad y periodo, para así tener los cálculos para cada entidad en diferentes años:\n\n```{r}\npobreza_agrupado_por_entidad_y_periodo <- group_by(pobreza, entidad_federativa, periodo)\n\nsummarise(\n  pobreza_agrupado_por_entidad_y_periodo,\n  pob_total = sum(poblacion, na.rm = TRUE),\n  pob_pobreza_total = sum(pobreza_poblacion, na.rm = TRUE)\n)\n\n```\n\n\n# Ejercicios\n\n## Ejercicio 1\n\n¿Ha disminuido o incrementado el porcentaje de población en condición en pobreza en México? Para contestar a la pregunta realiza los siguientes pasos:\n\n1.  Crea una variable `pobreza_agrupado_por_periodo` donde agrupes los datos de la tabla `pobreza` por periodo usando la función `group_by`\n2.  Crea una tabla de resumen con la función `summarise` que contenga la población total y población total en pobreza para cada periodo y guárdala en una variable que se llame `resumen_periodos`\n3.  Agrega una columna a la tabla `resumen_periodos` que tenga el porcentaje de población en pobreza usando la función `mutate`.\n\n```{r}\n# Escribe aquí tu respuesta\n\n\n```\n\n## Ejercicio 2\n\n¿Cuáles son los municipios con mayor porcentaje de pobreza en la Ciudad de México? Para contestar a esta pregunta realiza los siguientes pasos:\n\n1.  Filtra los datos de la tabla `pobreza` usando la función `filter` para quedarte solo con los datos de la Ciudad de México y del periodo 2020, y guarda tus resultados en una variable que se llame `pobreza_cdmx_2020`\n2.  Agrega a tu tabla `pobreza_cdmx_2020` una columna donde calcules el porcentaje de pobreza de cada municipio. Recuerda sobrescribir tu variable para que los cambios queden guardados\n3.  Ordena tu tabla de mayor porcentaje de pobreza a menor porcentaje de pobreza.\n\n```{r}\n# Escribe aquí tu respuesta\n\n\n```\n\n## Ejercicio 3\n\n¿Cómo ha cambiado el porcentaje de población en condición de pobreza en el Estado de México a lo largo del tiempo? Para contestar a esta pregunta realiza los siguientes pasos:\n\n1.  Filtra los datos de la tabla `pobreza` usando la función `filter` para quedarte sólo con los datos del Estado de México, y guarda tus resultados en una variable que se llame `pobreza_edomex`.\n2.  Agrupa tus datos por periodo y guárdalos en una variable que se llame `pobreza_edomex_agrupado_por_periodo`\n3.  Crea una tabla `resumen_edomex_periodo` donde sumes la población total y población en pobreza para cada periodo.\n4.  Agrega a tu tabla`resumen_edomex_periodo` una columna con el porcentaje de población en condición de pobreza.\n\n```{r}\n# Escribe aquí tu respuesta\n\n\n```\n","srcMarkdownNoYaml":"\n\n# Introducción\n\nHasta ahora hemos usado funciones para filtrar, reordenar y agregar columnas a una tabla de datos. Otra cosa que es muy útil es crear nuestras propias tablas de datos para a partir los datos de otra tabla. En este notebook exploramos cómo crear tablas que resuman la información de otras tablas.\n\n**Objetivos**\n\n-   Usar la función `summarise` para crear tablas de resumen de datos\n-   Usar la función `group_by` para realizar operaciones con datos agrupados por campos\n\n# Importar y preparar los datos\n\nEn este notebook continuamos trabajando con los datos de pobreza de CONEVAL que usamos en el notebook anterior. Nos quedamos solo con los datos de 2020 y les agregamos la columna de porcentaje de pobreza:\n\n```{r}\n\nlibrary(tidyverse)\n\npobreza <- read_csv(\n  './data/pobreza_municipal.csv', \n  col_select = c(\n    'entidad_federativa', \n    'municipio', \n    'poblacion', \n    'pobreza_poblacion',\n    'pobreza_extrema_poblacion',\n    'periodo'\n    )\n)\n\npobreza_2020 <- filter(pobreza, periodo == '2020-01-01')\n\npobreza_2020 <- mutate(\n  pobreza_2020, \n  pobreza_porcentaje = pobreza_poblacion / poblacion * 100, \n  .after = pobreza_poblacion\n  )\n\npobreza_2020\n\n```\n\n# Resumir datos individualmente\n\nUsando las funciones `sum`, `mean`, `min` y `max` y la función `pull` o `select` podemos resumir los valores columas que queramos. Por ejemplo, para conocer la población total en México podemos sumar la columna `poblacion`:\n\n```{r}\n\nsum(pull(pobreza_2020, poblacion), na.rm = TRUE)\n\n```\n\nTambién podríamos calcular la población total en condición de pobreza en México sumando la columna `pobreza_poblacion`:\n\n```{r}\n\nsum(pull(pobreza_2020, pobreza_poblacion), na.rm = TRUE)\n\n```\n\nTambién nos podrían interesar la media, el máximo y mínimo de la columna `pobreza_porcentaje`:\n\n```{r}\n\nmean(pull(pobreza_2020, pobreza_porcentaje), na.rm = TRUE)\nmax(pull(pobreza_2020, pobreza_porcentaje), na.rm = TRUE)\nmin(pull(pobreza_2020, pobreza_porcentaje), na.rm = TRUE)\n\n```\n\nSin embargo, algo que sería más cómodo es tener una única tabla con todos estos valores de resumen. Para eso existe la función `summarise`.\n\n# Función `summarise`\n\nLa función `summarise` nos permite crear una sola tabla en la que pongamos los valores de resumen que nos interesan. Por ejemplo, podemos agregar columnas para todos los valores que obtuvimos en la sección anterior. Nota como aquí ya no necesitamos la función `pull`.\n\n```{r}\n\nsummarise(\n  pobreza_2020,\n  pob_total = sum(poblacion, na.rm = TRUE),\n  pob_pobreza_total = sum(pobreza_poblacion, na.rm = TRUE),\n  media_porcentaje_pobreza = mean(pobreza_porcentaje, na.rm = TRUE),\n  max_porcentaje_pobreza = max(pobreza_porcentaje, na.rm = TRUE),\n  min_porcentaje_pobreza = min(pobreza_porcentaje, na.rm = TRUE)\n)\n\n```\n\n# Resúmenes con datos agrupados\n\n`summarise` nos puede dar resúmenes muy útiles, sin embargo, algo más útil sería obtener resúmenes agrupando los datos. Por ejemplo, si quisiéramos saber cuál es el porcentaje de población en condición de pobreza en cada estado necesitamos la información de la población en pobreza total de un estado, y la población total del estado. Para sumar sólo la información de un estado podríamos usar la función `filter`, sin embargo como tenemos 32 estados tendríamos que aplicarla 32 veces... que flojera. Para eso es que tenemos la función `group_by`\n\nLa función `group_by` nos permite hacer operaciones agrupando los datos por un criterio. Por ejemplo, si queremos agrupar los datos por estado podemos hacer lo siguiente:\n\n```{r}\n\npobreza_2020_agrupado_por_entidad <- group_by(pobreza_2020, entidad_federativa)\npobreza_2020_agrupado_por_entidad\n\n```\n\nNota como parece que no les pasó nada a los datos. La función `group_by` por si sola no afecta en nada a los datos, solamente le indica a las funciones que usemos posteriormente que deben realizar las operaciones agrupando a los datos por un criterio. Nota como hasta arriba de donde se imprime la tabla hay una leyenda que dice `Groups: entidad_federativa`.\n\nVeamos que pasa si ahora repetimos el mismo resumen de arriba pero con los datos agrupados:\n\n```{r}\n\nsummarise(\n  pobreza_2020_agrupado_por_entidad,\n  pob_total = sum(poblacion, na.rm = TRUE),\n  pob_pobreza_total = sum(pobreza_poblacion, na.rm = TRUE),\n  media_porcentaje_pobreza = mean(pobreza_porcentaje, na.rm = TRUE),\n  max_porcentaje_pobreza = max(pobreza_porcentaje, na.rm = TRUE),\n  min_porcentaje_pobreza = min(pobreza_porcentaje, na.rm = TRUE)\n)\n\n```\n\nNota cómo ahora en lugar de arrojarnos un solo valor que resume todos los datos de la columna nos arroja una tabla con 32 filas que corresponden a cada estado cada uno con sus propios valores.\n\nLos resultados que arroja la función `summarise` son una nueva tabla que podemos guardar en una variable:\n\n```{r}\n\npobreza_2020_entidades <- summarise(\n  pobreza_2020_agrupado_por_entidad,\n  pob_total = sum(poblacion, na.rm = TRUE),\n  pob_pobreza_total = sum(pobreza_poblacion, na.rm = TRUE),\n  media_porcentaje_pobreza = mean(pobreza_porcentaje, na.rm = TRUE),\n  max_porcentaje_pobreza = max(pobreza_porcentaje, na.rm = TRUE),\n  min_porcentaje_pobreza = min(pobreza_porcentaje, na.rm = TRUE)\n)\n\npobreza_2020_entidades\n\n```\n\nY esta tabla la podemos manipular como a cualquier tabla. Por ejemplo, podemos agregarle una columna con el porcentaje de población en pobreza en el estado:\n\n```{r}\n\npobreza_2020_entidades <- mutate(\n  pobreza_2020_entidades,\n  pob_pobreza_porcentaje = pob_pobreza_total / pob_total * 100,\n  .after = pob_pobreza_total\n)\n\npobreza_2020_entidades\n\n```\n\nY podemos ordenarla de menor a mayor porcentaje de pobreza y usar `print` para ver la tabla completa:\n\n```{r}\n\nprint(arrange(pobreza_2020_entidades, pob_pobreza_porcentaje), n = 32)\n\n```\n\nUna función muy útil para usar con datos agrupados es la función `n()`. Esta lo único que hace es contar el número de elementos de cada grupo. Por ejemplo para saber cuántos municipios hay en cada entidad podemos hacer lo siguiente:\n\n```{r}\npobreza_2020_agrupado_por_entidad <- group_by(pobreza_2020, entidad_federativa)\nsummarise(\n    pobreza_2020_agrupado_por_entidad, \n    num_municipios = n()\n)\n```\n\n\n# Agrupar por varios valores\n\nLa función `group_by` nos permite agrupar por más de un solo valor. Por ejemplo, podemos hacer los mismos cálculos pero agrupando los valores de la tabla `pobreza` por entidad y periodo, para así tener los cálculos para cada entidad en diferentes años:\n\n```{r}\npobreza_agrupado_por_entidad_y_periodo <- group_by(pobreza, entidad_federativa, periodo)\n\nsummarise(\n  pobreza_agrupado_por_entidad_y_periodo,\n  pob_total = sum(poblacion, na.rm = TRUE),\n  pob_pobreza_total = sum(pobreza_poblacion, na.rm = TRUE)\n)\n\n```\n\n\n# Ejercicios\n\n## Ejercicio 1\n\n¿Ha disminuido o incrementado el porcentaje de población en condición en pobreza en México? Para contestar a la pregunta realiza los siguientes pasos:\n\n1.  Crea una variable `pobreza_agrupado_por_periodo` donde agrupes los datos de la tabla `pobreza` por periodo usando la función `group_by`\n2.  Crea una tabla de resumen con la función `summarise` que contenga la población total y población total en pobreza para cada periodo y guárdala en una variable que se llame `resumen_periodos`\n3.  Agrega una columna a la tabla `resumen_periodos` que tenga el porcentaje de población en pobreza usando la función `mutate`.\n\n```{r}\n# Escribe aquí tu respuesta\n\n\n```\n\n## Ejercicio 2\n\n¿Cuáles son los municipios con mayor porcentaje de pobreza en la Ciudad de México? Para contestar a esta pregunta realiza los siguientes pasos:\n\n1.  Filtra los datos de la tabla `pobreza` usando la función `filter` para quedarte solo con los datos de la Ciudad de México y del periodo 2020, y guarda tus resultados en una variable que se llame `pobreza_cdmx_2020`\n2.  Agrega a tu tabla `pobreza_cdmx_2020` una columna donde calcules el porcentaje de pobreza de cada municipio. Recuerda sobrescribir tu variable para que los cambios queden guardados\n3.  Ordena tu tabla de mayor porcentaje de pobreza a menor porcentaje de pobreza.\n\n```{r}\n# Escribe aquí tu respuesta\n\n\n```\n\n## Ejercicio 3\n\n¿Cómo ha cambiado el porcentaje de población en condición de pobreza en el Estado de México a lo largo del tiempo? Para contestar a esta pregunta realiza los siguientes pasos:\n\n1.  Filtra los datos de la tabla `pobreza` usando la función `filter` para quedarte sólo con los datos del Estado de México, y guarda tus resultados en una variable que se llame `pobreza_edomex`.\n2.  Agrupa tus datos por periodo y guárdalos en una variable que se llame `pobreza_edomex_agrupado_por_periodo`\n3.  Crea una tabla `resumen_edomex_periodo` donde sumes la población total y población en pobreza para cada periodo.\n4.  Agrega a tu tabla`resumen_edomex_periodo` una columna con el porcentaje de población en condición de pobreza.\n\n```{r}\n# Escribe aquí tu respuesta\n\n\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":"html_document","warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"toc":true,"output-file":"12 - Resumir datos.html"},"language":{"toc-title-document":"Tabla de contenidos","toc-title-website":"En esta página","related-formats-title":"Otros formatos","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Fuente","other-links-title":"Otros Enlaces","code-links-title":"Enlaces de código","launch-dev-container-title":"Iniciar Dev Container","launch-binder-title":"Iniciar Binder","article-notebook-label":"Cuaderno de Artículo","notebook-preview-download":"Descargar Cuaderno","notebook-preview-download-src":"Descargar código fuente","notebook-preview-back":"Volver al Artículo","manuscript-meca-bundle":"Archivo MECA","section-title-abstract":"Resumen","section-title-appendices":"Apéndices","section-title-footnotes":"Notas","section-title-references":"Referencias","section-title-reuse":"Reutilización","section-title-copyright":"Derechos de autor","section-title-citation":"Cómo citar","appendix-attribution-cite-as":"Por favor, cita este trabajo como:","appendix-attribution-bibtex":"BibTeX","appendix-view-license":"Ver Licencia","title-block-author-single":"Autor/a","title-block-author-plural":"Autores/as","title-block-affiliation-single":"Afiliación","title-block-affiliation-plural":"Afiliaciones","title-block-published":"Fecha de publicación","title-block-modified":"Fecha de modificación","title-block-keywords":"Palabras clave","callout-tip-title":"Tip","callout-note-title":"Nota","callout-warning-title":"Advertencia","callout-important-title":"Importante","callout-caution-title":"Precaución","code-summary":"Código","code-tools-menu-caption":"Código","code-tools-show-all-code":"Mostrar todo el código","code-tools-hide-all-code":"Ocultar todo el código","code-tools-view-source":"Ver el código fuente","code-tools-source-code":"Ejecutar el código","tools-share":"Compartir","tools-download":"Descargar","code-line":"Línea","code-lines":"Líneas","copy-button-tooltip":"Copiar al portapapeles","copy-button-tooltip-success":"Copiado","repo-action-links-edit":"Editar esta página","repo-action-links-source":"Ver el código","repo-action-links-issue":"Informar de un problema","back-to-top":"Volver arriba","search-no-results-text":"Sin resultados","search-matching-documents-text":"documentos encontrados","search-copy-link-title":"Copiar el enlace en la búsqueda","search-hide-matches-text":"Ocultar resultados adicionales","search-more-match-text":"resultado adicional en este documento","search-more-matches-text":"resultados adicionales en este documento","search-clear-button-title":"Borrar","search-text-placeholder":"","search-detached-cancel-button-title":"Cancelar","search-submit-button-title":"Enviar","search-label":"Buscar","toggle-section":"Alternar sección","toggle-sidebar":"Alternar barra lateral","toggle-dark-mode":"Alternar modo oscuro","toggle-reader-mode":"Alternar modo lector","toggle-navigation":"Navegación de palanca","crossref-fig-title":"Figura","crossref-tbl-title":"Tabla","crossref-lst-title":"Listado","crossref-thm-title":"Teorema","crossref-lem-title":"Lema","crossref-cor-title":"Corolario","crossref-prp-title":"Proposición","crossref-cnj-title":"Conjetura","crossref-def-title":"Definición","crossref-exm-title":"Ejemplo","crossref-exr-title":"Ejercicio","crossref-ch-prefix":"Capítulo","crossref-apx-prefix":"Apéndice","crossref-sec-prefix":"Sección","crossref-eq-prefix":"Ecuación","crossref-lof-title":"Listado de Figuras","crossref-lot-title":"Listado de Tablas","crossref-lol-title":"Listado de Listados","environment-proof-title":"Prueba","environment-remark-title":"Observación","environment-solution-title":"Solución","listing-page-order-by":"Ordenar por","listing-page-order-by-default":"Por defecto","listing-page-order-by-date-asc":"Menos reciente","listing-page-order-by-date-desc":"Más reciente","listing-page-order-by-number-desc":"De mayor a menor","listing-page-order-by-number-asc":"De menor a mayor","listing-page-field-date":"Fecha","listing-page-field-title":"Título","listing-page-field-description":"Descripción","listing-page-field-author":"Autor/a","listing-page-field-filename":"Nombre de archivo","listing-page-field-filemodified":"Fecha de modificación","listing-page-field-subtitle":"Subtítulo","listing-page-field-readingtime":"Tiempo de lectura","listing-page-field-wordcount":"Conteo de Palabras","listing-page-field-categories":"Categorías","listing-page-minutes-compact":"{0} minutos","listing-page-category-all":"Todas","listing-page-no-matches":"No hay resultados","listing-page-words":"{0} palabras","listing-page-filter":"Filtro","draft":"Borrador"},"metadata":{"lang":"es","fig-responsive":true,"quarto-version":"1.5.55","theme":"cosmo","title":"12 - Resumir datos","editor_options":{"chunk_output_type":"console"}},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}